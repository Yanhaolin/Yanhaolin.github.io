{"title":"在Github使用Hexo搭建博客系统","slug":"在Github使用Hexo搭建博客系统","date":"2018-04-03T12:22:25.742Z","updated":"2018-04-03T14:30:11.834Z","comments":true,"excerpt":"","content":"<h1 id=\"一、配置Github环境\"><a href=\"#一、配置Github环境\" class=\"headerlink\" title=\"一、配置Github环境\"></a>一、配置Github环境</h1><h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><h2 id=\"配置ssh-key\"><a href=\"#配置ssh-key\" class=\"headerlink\" title=\"配置ssh-key\"></a>配置ssh-key</h2><ol>\n<li><p>检查ssh-key的设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  # 第一次安装时没有该目录</span><br><span class=\"line\">  $ cd ~/.ssh</span><br><span class=\"line\">  ``` </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> 1. 生成新ssh-key</span><br></pre></td></tr></table></figure>\n<h1 id=\"rsa算法，C后面接邮箱账号；表示根据邮箱生成key\"><a href=\"#rsa算法，C后面接邮箱账号；表示根据邮箱生成key\" class=\"headerlink\" title=\"rsa算法，C后面接邮箱账号；表示根据邮箱生成key\"></a>rsa算法，C后面接邮箱账号；表示根据邮箱生成key</h1><p>$ ssh-keygen -t rsa -C “<a href=\"mailto:example@example.com\" target=\"_blank\" rel=\"noopener\">example@example.com</a>“</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1. 添加ssh-key到Github</span><br><span class=\"line\"></span><br><span class=\"line\">  登陆Github--&gt;Account Settings---&gt;SSH Public keys ---&gt; add another public keys</span><br><span class=\"line\"></span><br><span class=\"line\">2. 测试</span><br></pre></td></tr></table></figure>\n<p>$ ssh -T <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">3. 设置用户信息</span><br></pre></td></tr></table></figure>\n<h2 id=\"当电脑只需用到一个Github账号时，可以使用全局的用户信息\"><a href=\"#当电脑只需用到一个Github账号时，可以使用全局的用户信息\" class=\"headerlink\" title=\"当电脑只需用到一个Github账号时，可以使用全局的用户信息\"></a>当电脑只需用到一个Github账号时，可以使用全局的用户信息</h2><p>$ git config –global user.name “name”//用户名<br>$ git config –global user.email “<a href=\"mailto:example@example.com\" target=\"_blank\" rel=\"noopener\">example@example.com</a>“//邮箱</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 二、当电脑需要多个Github账号切换时</span><br><span class=\"line\"></span><br><span class=\"line\">1. 配置第二个账号的ssh-key</span><br></pre></td></tr></table></figure>\n<p>$ssh-keygen -t rsa -C “<a href=\"mailto:example@example.com\" target=\"_blank\" rel=\"noopener\">example@example.com</a>“<br>$ssh-add ~/.ssh/id_rsa_second</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2. 配置ssh-key到github</span><br><span class=\"line\"></span><br><span class=\"line\">3. 修改~/.ssh/config文件</span><br></pre></td></tr></table></figure>\n<p>#默认的github<br>Host github.com<br>HostName github.com<br>IdentityFile ~/.ssh/id_rsa<br>#第二个github<br>Host github_second<br>HostName github.com<br>IdentityFile ~/.ssh/id_rsa_second</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">4. 使用别名pull/push代码</span><br></pre></td></tr></table></figure>\n<p>git clone git@github_second:username/reponame</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">5. 取消global用户信息</span><br></pre></td></tr></table></figure>\n<p>git config –global –unset user.name<br>git config –global –unset user.email</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">6. 每次commit前都要执行下面代码</span><br></pre></td></tr></table></figure>\n<p>git config  user.email “<a href=\"mailto:example@example.com\" target=\"_blank\" rel=\"noopener\">example@example.com</a>“<br>git config  user.name “name”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 三、生成</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;github_name&gt;.github.io博客&lt;/github_name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">1. 登录github，创建一个repository，命名为</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;github_name&gt;.github.io&lt;/github_name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2. 进入项目，点击Settings，在Github Pages部分点击Launch automatic page generator，下一步，下一步就可以了。</span><br><span class=\"line\"></span><br><span class=\"line\">3. 通过http://</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;github_name&gt;.github.io访问你的静态站点&lt;/github_name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 四、使用git提交更新</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; Tip：当对git命令不熟悉时，可以通过`$git xxx --help`查看帮助文档，注意xxx代表不熟悉的命令，比如clone。也可以查看[廖雪峰的Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)和[Git官网](https://git-scm.com/book/zh/v2)学习。</span><br><span class=\"line\"></span><br><span class=\"line\">1. 克隆远程仓库</span><br></pre></td></tr></table></figure>\n<h1 id=\"电脑中只有一个github账号时\"><a href=\"#电脑中只有一个github账号时\" class=\"headerlink\" title=\"电脑中只有一个github账号时\"></a>电脑中只有一个github账号时</h1><p>git clone <a href=\"https://github.com/username/reponame\" target=\"_blank\" rel=\"noopener\">https://github.com/username/reponame</a></p>\n<h1 id=\"电脑中有两个个github账号时，github-second表示第二个账号的host\"><a href=\"#电脑中有两个个github账号时，github-second表示第二个账号的host\" class=\"headerlink\" title=\"电脑中有两个个github账号时，github_second表示第二个账号的host\"></a>电脑中有两个个github账号时，github_second表示第二个账号的host</h1><p>git clone git@github_second:username/reponame</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2. 移除所有文件</span><br></pre></td></tr></table></figure>\n<h1 id=\"进入仓库文件夹（工作区）\"><a href=\"#进入仓库文件夹（工作区）\" class=\"headerlink\" title=\"进入仓库文件夹（工作区）\"></a>进入仓库文件夹（工作区）</h1><p>$cd reponame</p>\n<h1 id=\"强制移除所有文件\"><a href=\"#强制移除所有文件\" class=\"headerlink\" title=\"强制移除所有文件\"></a>强制移除所有文件</h1><p>$git rm -rf .</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">3. 添加更新到仓库暂存区中</span><br><span class=\"line\"></span><br><span class=\"line\">  可以复制要添加的文件到仓库文件夹（工作区）中，然后执行命令 `$git add *`</span><br><span class=\"line\"></span><br><span class=\"line\">4. 提交更新到本地仓库</span><br></pre></td></tr></table></figure>\n<p>$git commit -a -m “注释”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">5. 提交更新到远程服务器</span><br></pre></td></tr></table></figure>\n<h1 id=\"origin表示源仓库\"><a href=\"#origin表示源仓库\" class=\"headerlink\" title=\"origin表示源仓库\"></a>origin表示源仓库</h1><p>$git push origin master</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 五、分支管理</span><br><span class=\"line\"></span><br><span class=\"line\">## 新建分支</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"切换到分支newbranch，-b表示没有就创建（branch-build）\"><a href=\"#切换到分支newbranch，-b表示没有就创建（branch-build）\" class=\"headerlink\" title=\"切换到分支newbranch，-b表示没有就创建（branch/build）\"></a>切换到分支newbranch，-b表示没有就创建（branch/build）</h1><p>$git checkout -b newbranch</p>\n<h1 id=\"创建文件hello\"><a href=\"#创建文件hello\" class=\"headerlink\" title=\"创建文件hello\"></a>创建文件hello</h1><p>$touch hello</p>\n<h1 id=\"添加到暂存区\"><a href=\"#添加到暂存区\" class=\"headerlink\" title=\"添加到暂存区\"></a>添加到暂存区</h1><p>$git add hello</p>\n<h1 id=\"提交到本地仓库\"><a href=\"#提交到本地仓库\" class=\"headerlink\" title=\"提交到本地仓库\"></a>提交到本地仓库</h1><p>$git commit -m “add a file hello”</p>\n<h1 id=\"提交到远程仓库的newbranch分支，-u表示set-upstream\"><a href=\"#提交到远程仓库的newbranch分支，-u表示set-upstream\" class=\"headerlink\" title=\"提交到远程仓库的newbranch分支，-u表示set-upstream\"></a>提交到远程仓库的newbranch分支，-u表示set-upstream</h1><p>$git push -u origin newbranch<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 设置默认分支</span><br><span class=\"line\"></span><br><span class=\"line\">在项目的Settings--&gt;Branches下可以修改Default branch 修改默认分支，其实就是把版本库的头指针HEAD 指向了其他分支，通过`$git branch -r`（r表示remotes）可以查看所有远程分支和默认分支。</span><br><span class=\"line\"></span><br><span class=\"line\">## 合并分支</span><br></pre></td></tr></table></figure></p>\n<p>$git merge newbranch<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 切换分支</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"切换到master分支工作\"><a href=\"#切换到master分支工作\" class=\"headerlink\" title=\"切换到master分支工作\"></a>切换到master分支工作</h1><p>$git checkout master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 删除分支</span><br><span class=\"line\"></span><br><span class=\"line\">Git在删除分支时为避免数据丢失，默认禁止删除尚未合并的分支。所以，如果分支尚未合并，使用`$git branch -d newbranch`会报错。 使用`$git branch -D newbranch`可以强制删除分支。</span><br><span class=\"line\"></span><br><span class=\"line\">## 删除远程分支</span><br></pre></td></tr></table></figure></p>\n<p>$git push origin –delete testbranch<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 六、使用github协同开发</span><br><span class=\"line\"></span><br><span class=\"line\">## 开发者fork源仓库</span><br><span class=\"line\"></span><br><span class=\"line\">每个开发者都从源仓库中Fork代码，然后独立开发。完了，在pull request合并到源仓库中。</span><br><span class=\"line\"></span><br><span class=\"line\">## 把开发者仓库clone到本地</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"电脑中只有一个github账号时-1\"><a href=\"#电脑中只有一个github账号时-1\" class=\"headerlink\" title=\"电脑中只有一个github账号时\"></a>电脑中只有一个github账号时</h1><p>git clone <a href=\"https://github.com/username/reponame\" target=\"_blank\" rel=\"noopener\">https://github.com/username/reponame</a></p>\n<h1 id=\"电脑中有两个个github账号时，github-second表示第二个账号的host-1\"><a href=\"#电脑中有两个个github账号时，github-second表示第二个账号的host-1\" class=\"headerlink\" title=\"电脑中有两个个github账号时，github_second表示第二个账号的host\"></a>电脑中有两个个github账号时，github_second表示第二个账号的host</h1><p>git clone git@github_second:username/reponame<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 构建功能分支进行开发</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>git checkout develop</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"切换到develop分支\"><a href=\"#切换到develop分支\" class=\"headerlink\" title=\"切换到develop分支\"></a>切换到<code>develop</code>分支</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>git checkout -b feature-discuss</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"分出一个功能性分支\"><a href=\"#分出一个功能性分支\" class=\"headerlink\" title=\"分出一个功能性分支\"></a>分出一个功能性分支</h1><blockquote>\n<blockquote>\n<p>touch discuss.js</p>\n</blockquote>\n</blockquote>\n<h1 id=\"假装discuss-js就是我们要开发的功能\"><a href=\"#假装discuss-js就是我们要开发的功能\" class=\"headerlink\" title=\"假装discuss.js就是我们要开发的功能\"></a>假装discuss.js就是我们要开发的功能</h1><blockquote>\n<blockquote>\n<p>git add .<br>git commit -m ‘finish discuss feature’</p>\n</blockquote>\n</blockquote>\n<h1 id=\"提交更改\"><a href=\"#提交更改\" class=\"headerlink\" title=\"提交更改\"></a>提交更改</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>git checkout develop</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"回到develop分支\"><a href=\"#回到develop分支\" class=\"headerlink\" title=\"回到develop分支\"></a>回到develop分支</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>git merge –no-ff feature-discuss</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"把做好的功能合并到develop中\"><a href=\"#把做好的功能合并到develop中\" class=\"headerlink\" title=\"把做好的功能合并到develop中\"></a>把做好的功能合并到develop中</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>git branch -d feature-discuss</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"删除功能性分支\"><a href=\"#删除功能性分支\" class=\"headerlink\" title=\"删除功能性分支\"></a>删除功能性分支</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>git push origin develop</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"把develop提交到自己的远程仓库中\"><a href=\"#把develop提交到自己的远程仓库中\" class=\"headerlink\" title=\"把develop提交到自己的远程仓库中\"></a>把develop提交到自己的远程仓库中</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## pull request</span><br><span class=\"line\"></span><br><span class=\"line\">点击绿色按钮pull request，将自己仓库的分支合并到源分支中</span><br><span class=\"line\"></span><br><span class=\"line\">## 管理员测试、合并</span><br><span class=\"line\"></span><br><span class=\"line\">1. review代码</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>git checkout develop</p>\n</blockquote>\n</blockquote>\n<h1 id=\"进入他本地的develop分支\"><a href=\"#进入他本地的develop分支\" class=\"headerlink\" title=\"进入他本地的develop分支\"></a>进入他本地的develop分支</h1><blockquote>\n<blockquote>\n<p>git checkout -b khhhshhh-develop</p>\n</blockquote>\n</blockquote>\n<h1 id=\"从develop分支中分出一个叫khhhshhh-develop的测试分支测试我的代码\"><a href=\"#从develop分支中分出一个叫khhhshhh-develop的测试分支测试我的代码\" class=\"headerlink\" title=\"从develop分支中分出一个叫khhhshhh-develop的测试分支测试我的代码\"></a>从develop分支中分出一个叫khhhshhh-develop的测试分支测试我的代码</h1><blockquote>\n<blockquote>\n<p>git pull <a href=\"https://github.com/khhhshhh/practice.git\" target=\"_blank\" rel=\"noopener\">https://github.com/khhhshhh/practice.git</a> develop</p>\n</blockquote>\n</blockquote>\n<h1 id=\"把我的代码pull到测试分支中，进行测试\"><a href=\"#把我的代码pull到测试分支中，进行测试\" class=\"headerlink\" title=\"把我的代码pull到测试分支中，进行测试\"></a>把我的代码pull到测试分支中，进行测试</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1. 合并分支</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>git checkout develop<br>git merge –no-ff khhhshhh-develop<br>git push origin develop<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 七、安装和配置Hexo</span><br><span class=\"line\"></span><br><span class=\"line\">## 需要环境</span><br><span class=\"line\"></span><br><span class=\"line\">- Node.js</span><br><span class=\"line\">- Git</span><br><span class=\"line\"></span><br><span class=\"line\">  ## 安装</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n</blockquote>\n<p>npm install hexo-cli -g<br>npm install hexo –save</p>\n<p>#如果命令无法运行，可以尝试更换taobao的npm源<br>npm install -g cnpm –registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 基本配置</span><br></pre></td></tr></table></figure></p>\n<p>#Hexo 将会在指定文件夹中新建所需要的文件。<br>$ hexo init <folder><br>$ cd <folder><br>$ npm install<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></folder></folder></p>\n<h1 id=\"安装Hexo插件\"><a href=\"#安装Hexo插件\" class=\"headerlink\" title=\"安装Hexo插件\"></a>安装Hexo插件</h1><p>npm install hexo-generator-index –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-category –save<br>npm install hexo-generator-tag –save<br>npm install hexo-server –save<br>npm install hexo-deployer-git –save<br>npm install hexo-deployer-heroku –save<br>npm install hexo-deployer-rsync –save<br>npm install hexo-deployer-openshift –save<br>npm install <a href=\"mailto:hexo-renderer-marked@0.2\" target=\"_blank\" rel=\"noopener\">hexo-renderer-marked@0.2</a> –save<br>npm install <a href=\"mailto:hexo-renderer-stylus@0.2\" target=\"_blank\" rel=\"noopener\">hexo-renderer-stylus@0.2</a> –save<br>npm install hexo-generator-feed@1 –save<br>npm install hexo-generator-sitemap@1 –save<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"在本地查看效果\"><a href=\"#在本地查看效果\" class=\"headerlink\" title=\"在本地查看效果\"></a>在本地查看效果</h1><p>$hexo server<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 主题配置</span><br><span class=\"line\"></span><br><span class=\"line\">1. 修改根目录的_config.yml</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Hexo-Configuration\"><a href=\"#Hexo-Configuration\" class=\"headerlink\" title=\"Hexo Configuration\"></a>Hexo Configuration</h1><h2 id=\"Docs-http-hexo-io-docs-configuration-html\"><a href=\"#Docs-http-hexo-io-docs-configuration-html\" class=\"headerlink\" title=\"Docs: http://hexo.io/docs/configuration.html\"></a>Docs: <a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"noopener\">http://hexo.io/docs/configuration.html</a></h2><h2 id=\"Source-https-github-com-tommy351-hexo\"><a href=\"#Source-https-github-com-tommy351-hexo\" class=\"headerlink\" title=\"Source: https://github.com/tommy351/hexo/\"></a>Source: <a href=\"https://github.com/tommy351/hexo/\" target=\"_blank\" rel=\"noopener\">https://github.com/tommy351/hexo/</a></h2><h1 id=\"Site-整站的基本信息\"><a href=\"#Site-整站的基本信息\" class=\"headerlink\" title=\"Site #整站的基本信息\"></a>Site #整站的基本信息</h1><p>title: IT协会 #网站标题<br>subtitle: 学习 总结 分享 #网站副标题<br>description: 学习 总结 分享 #网站描述<br>author:  itxiehui#网站作者<br>email: <a href=\"mailto:gdinit@163.com\" target=\"_blank\" rel=\"noopener\">gdinit@163.com</a> #联系邮箱<br>language: zh-CN</p>\n<h1 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h1><h2 id=\"If-your-site-is-put-in-a-subdirectory\"><a href=\"#If-your-site-is-put-in-a-subdirectory\" class=\"headerlink\" title=\"If your site is put in a subdirectory\"></a>If your site is put in a subdirectory</h2><p>url: <a href=\"http://itxiehui.github.io\" target=\"_blank\" rel=\"noopener\">http://itxiehui.github.io</a> #你的域名<br>root: /<br>permalink: :year/:month/:day/:title/<br>tag_dir: tags<br>archive_dir: archives<br>category_dir: categories<br>code_dir: downloads/code</p>\n<p>……</p>\n<h1 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h1><h2 id=\"Set-per-page-to-0-to-disable-pagination\"><a href=\"#Set-per-page-to-0-to-disable-pagination\" class=\"headerlink\" title=\"Set per_page to 0 to disable pagination\"></a>Set per_page to 0 to disable pagination</h2><p>per_page: 10 #每页10篇文章<br>pagination_dir: page</p>\n<h1 id=\"Disqus-社会化评论disqus\"><a href=\"#Disqus-社会化评论disqus\" class=\"headerlink\" title=\"Disqus #社会化评论disqus\"></a>Disqus #社会化评论disqus</h1><p>disqus_shortname:</p>\n<h1 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h1><h2 id=\"Plugins-https-github-com-tommy351-hexo-wiki-Plugins\"><a href=\"#Plugins-https-github-com-tommy351-hexo-wiki-Plugins\" class=\"headerlink\" title=\"Plugins: https://github.com/tommy351/hexo/wiki/Plugins\"></a>Plugins: <a href=\"https://github.com/tommy351/hexo/wiki/Plugins\" target=\"_blank\" rel=\"noopener\">https://github.com/tommy351/hexo/wiki/Plugins</a></h2><h2 id=\"Themes-https-github-com-tommy351-hexo-wiki-Themes\"><a href=\"#Themes-https-github-com-tommy351-hexo-wiki-Themes\" class=\"headerlink\" title=\"Themes: https://github.com/tommy351/hexo/wiki/Themes\"></a>Themes: <a href=\"https://github.com/tommy351/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/tommy351/hexo/wiki/Themes</a></h2><p>theme: jacman #修改主题<br>exclude_generator:<br>Plugins:</p>\n<ul>\n<li>hexo-generator-feed</li>\n<li>hexo-generator-sitemap</li>\n</ul>\n<p>……</p>\n<h1 id=\"Deployment\"><a href=\"#Deployment\" class=\"headerlink\" title=\"Deployment\"></a>Deployment</h1><h2 id=\"Docs-http-hexo-io-docs-deployment-html\"><a href=\"#Docs-http-hexo-io-docs-deployment-html\" class=\"headerlink\" title=\"Docs: http://hexo.io/docs/deployment.html\"></a>Docs: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">http://hexo.io/docs/deployment.html</a></h2><p>deploy: # 部署位置<br>  type: github<br>  repository: <a href=\"https://github.com/cnfeat/cnfeat.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/cnfeat/cnfeat.github.io.git</a><br>  branch: master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 写作</span><br><span class=\"line\"></span><br><span class=\"line\">使用hexo new &quot;newpost&quot;创建一个新文件，然后使用hexo g -d生成并部署到github上。注意在_config.yml中配置的deploy的repository要看是否电脑有多个github账号。</span><br></pre></td></tr></table></figure></p>\n<p>#常用命令<br>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #将.deploy目录部署到GitHub<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>#简写<br>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 自定义404页面</span><br><span class=\"line\"></span><br><span class=\"line\">在主题的source/文件夹下新建一个404.html，内容如下：</span><br></pre></td></tr></table></figure></p>\n<p>&lt;!DOCTYPE HTML&gt;</p>\n<p><html></html></p>\n<p><head><br>  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"><br>  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"><br>  <meta name=\"robots\" content=\"all\"><br>  <meta name=\"robots\" content=\"index,follow\"><br>  <title>IT协会知识库</title><br></head></p>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\"></script>\n\n<p><script src=\"/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"jsonPath\":\"/live2dw/assets/shizuku.model.json\"},\"display\":{\"superSample\":2,\"width\":100,\"height\":200,\"position\":\"right\",\"hOffset\":0,\"vOffset\":-20},\"mobile\":{\"show\":true,\"scale\":0.5},\"react\":{\"opacityDefault\":0.7,\"opacityOnHover\":0.2}});</script></p></body><br><br><code>`</code><p></p>\n<p>再次执行<code>$ hexo g -d</code>即可快速部署。</p>\n<hr>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"http://www.yanhaolin.cn/2018/04/03/在Github使用Hexo搭建博客系统/\">在Github使用Hexo搭建博客系统</a><br>文章作者: <a href=\"http://linlshare.github.io/\" target=\"_blank\" rel=\"noopener\">林炜富</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"noopener\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">©署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","categories":[],"tags":[{"name":"Git","path":"api/tags/Git.json"},{"name":"Github","path":"api/tags/Github.json"}]}